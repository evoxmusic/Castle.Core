<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <PropertyGroup>
    <RootPath Condition=" '$(RootPath)' == '' ">$(MSBuildProjectDirectory)\..\..</RootPath>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">NET40-Release</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>9.0.30729</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{087AD3BF-5E40-450D-8138-FBB5F57AC474}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>CastleTests</RootNamespace>
    <AssemblyName>Castle.Core.DynamicProxy.Tests</AssemblyName>
    <SignAssembly>true</SignAssembly>
    <FileUpgradeFlags>
    </FileUpgradeFlags>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'NET40-Debug|AnyCPU' ">
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
    <OutputPath>bin\NET40-Debug\</OutputPath>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>TRACE;DEBUG;PHYSICALASSEMBLY DOTNET DOTNET40 CLIENTPROFILE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'NET40-Release|AnyCPU' ">
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
    <OutputPath>bin\NET40-Release\</OutputPath>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE;PHYSICALASSEMBLY DOTNET DOTNET40 CLIENTPROFILE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <DocumentationFile>
    </DocumentationFile>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'NET35-Debug|AnyCPU'">
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
    <OutputPath>bin\NET35-Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;PHYSICALASSEMBLY DOTNET DOTNET35</DefineConstants>
    <Optimize>false</Optimize>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <DebugSymbols>true</DebugSymbols>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'NET35-Release|AnyCPU'">
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
    <OutputPath>bin\NET35-Release\</OutputPath>
    <DefineConstants>TRACE;PHYSICALASSEMBLY DOTNET DOTNET35</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <DocumentationFile>
    </DocumentationFile>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'SL40-Release|AnyCPU'">
    <OutputPath>bin\SL40-Release\</OutputPath>
    <MSBuildTargets>Silverlight 4.0</MSBuildTargets>
    <DefineConstants>TRACE;SILVERLIGHT SL4</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <DocumentationFile>
    </DocumentationFile>
    <NoWarn>1685</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'SL40-Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <MSBuildTargets>Silverlight 4.0</MSBuildTargets>
    <OutputPath>bin\SL40-Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE;SILVERLIGHT SL4</DefineConstants>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <NoWarn>1685</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'SL30-Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\SL30-Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;SILVERLIGHT SL3</DefineConstants>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <NoWarn>444</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'SL30-Release|AnyCPU'">
    <OutputPath>bin\SL30-Release\</OutputPath>
    <DefineConstants>TRACE SILVERLIGHT SL3</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <NoWarn>444</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'MONO26-Debug|AnyCPU'">
    <DefineConstants>TRACE;DEBUG;MONO MONO26</DefineConstants>
    <Optimize>false</Optimize>
    <DebugType>full</DebugType>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <OutputPath>bin\MONO26-Debug\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'MONO26-Release|AnyCPU'">
    <DefineConstants>TRACE;MONO MONO26</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <OutputPath>bin\MONO26-Release\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'MONO28-Release|AnyCPU'">
    <OutputPath>bin\MONO28-Release\</OutputPath>
    <DefineConstants>TRACE;MONO MONO28</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'MONO28-Debug|AnyCPU'">
    <OutputPath>bin\MONO28-Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;MONO MONO28</DefineConstants>
    <Optimize>false</Optimize>
    <DebugType>full</DebugType>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>..\..\buildscripts\CastleKey.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="adodb, Version=7.0.3300.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\lib\net35\adodb.dll</HintPath>
    </Reference>
    <Reference Include="Rhino.Mocks.CPP.Interfaces">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\lib\net35\Rhino.Mocks.CPP.Interfaces.dll</HintPath>
    </Reference>
    <Reference Include="System.Runtime.Serialization">
      <RequiredTargetFramework>3.0</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.ServiceModel">
      <RequiredTargetFramework>3.0</RequiredTargetFramework>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <Choose>
    <When Condition="$(MSBuildTargets)!='Silverlight 3.0' and $(MSBuildTargets)!='Silverlight 4.0'">
      <ItemGroup>
        <Reference Include="System.configuration" />
        <Reference Include="System.Data" />
        <Reference Include="System.Web" />
        <Reference Include="nunit.framework">
          <SpecificVersion>False</SpecificVersion>
          <HintPath>..\..\lib\nunit.framework.dll</HintPath>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(MSBuildTargets) == 'Silverlight 3.0' or $(MSBuildTargets) == 'Silverlight 4.0'">
      <ItemGroup>
        <Reference Include="NUnit.Silverlight.Framework">
          <SpecificVersion>False</SpecificVersion>
          <HintPath>$(RootPath)\lib\$(BuildConfigKey)\NUnit.Silverlight.Framework.dll</HintPath>
        </Reference>
        <Reference Include="NUnit.Silverlight.Compatibility">
          <SpecificVersion>False</SpecificVersion>
          <HintPath>$(RootPath)\lib\$(BuildConfigKey)\NUnit.Silverlight.Compatibility.dll</HintPath>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <ItemGroup>
    <Compile Include="BasePEVerifyTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="BasicClassProxyTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="BasicInterfaceProxyTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="BasicInterfaceProxyWithoutTargetTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="BugsReportedTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="BugsReported\Camera.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="BugsReported\ConstraintViolationInDebuggerTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="BugsReported\Core40.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="BugsReported\DynProxy132.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="BugsReported\DynProxy145_SynchronizationContext.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="BugsReported\DynProxy159.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="BugsReported\DynProxy46.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="BugsReported\DynProxy88.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ChangeProxyTargetInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="DynamicProxy.Tests\Classes\AbstractClassWithMethod.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\HasCtorWithParamsStrings.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\HasCtorWithIntAndParamsArgument.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\HasCtorWithParamsArgument.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\HasFinalizeMethod.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\HasFinalizer.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\HasTwoProtectedMethods.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\InheritsAbstractClassWithMethod.cs" />
    <Compile Include="DynamicProxy.Tests\DelegateProxyTestCase.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\HasNonInheritableAttribute.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ClassToSerialize.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ClassWithIndexer.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\DiffAccessLevelOnProperties.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\NonPublicConstructorClass.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\NonPublicMethodsClass.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ServiceClass.cs" />
    <Compile Include="DynamicProxy.Tests\Explicit\TwoInterfacesExplicit.cs" />
    <Compile Include="DynamicProxy.Tests\InterceptionRetryTestCase.cs" />
    <Compile Include="DynamicProxy.Tests\InterfaceProxyWithTargetInterfaceAdditionalInterfacesTestCase.cs" />
    <Compile Include="DynamicProxy.Tests\Interfaces\IGenericInterfaceWithGenericMethodWithCascadingConstraintOnAnyReferenceType.cs" />
    <Compile Include="DynamicProxy.Tests\Interfaces\IGenericInterfaceWithGenericMethodWithCascadingConstraintOnAnyTypeWithDefaultConstructor.cs" />
    <Compile Include="DynamicProxy.Tests\Interfaces\IGenericInterfaceWithGenericMethodWithCascadingConstraintOnClass.cs" />
    <Compile Include="DynamicProxy.Tests\Interfaces\IGenericInterfaceWithGenericMethodWithCascadingConstraintOnInterface.cs" />
    <Compile Include="DynamicProxy.Tests\ProxyTypeCachingWithDifferentHooksTestCase.cs" />
    <Compile Include="DynamicProxy.Tests\SerializableClassTestCase.cs" />
    <Compile Include="DynamicProxy.Tests\Serialization\C.cs" />
    <Compile Include="DynamicProxy.Tests\Serialization\ClassWithDirectAndIndirectSelfReference.cs" />
    <Compile Include="DynamicProxy.Tests\Serialization\ClassWithIndirectSelfReference.cs" />
    <Compile Include="DynamicProxy.Tests\Serialization\ComplexHolder.cs" />
    <Compile Include="DynamicProxy.Tests\Serialization\DelegateHolder.cs" />
    <Compile Include="DynamicProxy.Tests\Serialization\EventHandlerClass.cs" />
    <Compile Include="DynamicProxy.Tests\Serialization\SerializableExplicitImpl.cs" />
    <Compile Include="DynamicProxy.Tests\Serialization\IMixedInterface.cs" />
    <Compile Include="DynamicProxy.Tests\Serialization\IndirectDelegateHolder.cs" />
    <Compile Include="DynamicProxy.Tests\Serialization\MethodFilterHook.cs" />
    <Compile Include="DynamicProxy.Tests\Serialization\SerializableInterceptorSelector.cs" />
    <Compile Include="DynamicProxy.Tests\Serialization\SerializableMixin.cs" />
    <Compile Include="GenerationHookTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenericTestUtility.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InheritedInterfacesTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterceptorSelectorTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\AlwaysThrowsServiceImpl.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\ClassWithIndexer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\ClassWithMarkerInterface.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\ClassWithMultiDimentionalArray.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\IClassWithMultiDimentionalArray.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\IExtendedService.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\IInterfaceWithGenericMethodWithDependentConstraint.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\IMyInterface2.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\InterfaceWithIndexer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\IService.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\IService2.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\One.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\OneAndEmpty.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\OneTwo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\ServiceImpl.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\Two.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\WithRefOut.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterClasses\WithRefOutEmpty.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InternalsVisibleTo.cs" />
    <Compile Include="MethodEquivalenceTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Mixins\ClassImplementingIDerivedSImpleMixin.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Mixins\ClassImplementingISimpleMixin.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Mixins\ComplexMixin.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Mixins\IDerivedSimpleMixin.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Mixins\OtherMixin.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Mixins\OtherMixinImplementingISimpleMixin.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Mixins\SimpleMixin.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ProxyGenerationOptionsTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ProxyKind.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ProxyNothingHook.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ProxyTargetAccessorHandlingTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="RhinoMocksTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ThrowingInterceptorException.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="TraceLoggerTests.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <Choose>
    <When Condition="$(MSBuildTargets)!='Silverlight 3.0' and $(MSBuildTargets)!='Silverlight 4.0'" />
  </Choose>
  <ItemGroup>
    <None Include="..\..\buildscripts\CastleKey.snk">
      <Link>CastleKey.snk</Link>
    </None>
    <None Include="App.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="DynamicProxy.Tests\Classes\ClassWithAttributesOnMethodParameters.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ClassWithExplicitInterface.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ClassWithInterface.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ClassWithVirtualInterface.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ClassWith_Smart_Attribute.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\RequiredAttribute.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\VirtualClassWithAutoProperty.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\VirtualClassWithMethod.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\VirtualClassWithNoDefaultCtor.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\VirtualClassWithProtectedGenericMethod.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\VirtualClassWithProtectedMethod.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\VirtualClassWithPublicField.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\VirtuallyImplementsInterfaceWithEvent.cs" />
    <Compile Include="DynamicProxy.Tests\ClassProxyWithTargetTestCase.cs" />
    <Compile Include="DynamicProxy.Tests\Explicit\GenericMethodExplicit.cs" />
    <Compile Include="DynamicProxy.Tests\Explicit\GenInterfaceExplicit.cs" />
    <Compile Include="DynamicProxy.Tests\Explicit\SimpleInterfaceExplicit.cs" />
    <Compile Include="DynamicProxy.Tests\Explicit\WithRefOutExplicit.cs" />
    <Compile Include="DynamicProxy.Tests\Interfaces\IBase.cs" />
    <Compile Include="DynamicProxy.Tests\Interfaces\ISub1.cs" />
    <Compile Include="DynamicProxy.Tests\Interfaces\ISub2.cs" />
    <Compile Include="DynamicProxy.Tests\ProxyTypeCachingTestCase.cs" />
    <Compile Include="DynamicProxy.Tests\ExplicitInterfaceTestCase.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ClassCallingVirtualMethodFromCtor.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ClassWithCharRetType.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ClassWithConstructors.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ClassWithVariousConstructors.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ClassWithInternalDefaultConstructor.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ClassWithProtectedDefaultConstructor.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\MySerializableClass.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ProtectedInternalConstructorClass.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\SimpleClass.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ClassOverridingEqualsAndGetHashCode.cs" />
    <Compile Include="DynamicProxy.Tests\Classes\ClassWithDefaultConstructor.cs" />
    <Compile Include="DynamicProxy.Tests\ClassProxyConstructorsTestCase.cs" />
    <Compile Include="GenClasses\ClassWithGenArgs.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenClasses\ClassWithIndexer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenClasses\ClassWithMethodWithArrayOfListOfT.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenClasses\ClassWithMethodWithGenericOfGenericOfT.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenClasses\ClassWithMethodWithReturnArrayOfListOfT.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenClasses\GenClassNameClash.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenClasses\GenClassWithConstraints.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenClasses\GenClassWithExplicitImpl.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenClasses\GenClassWithGenMethods.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenClasses\GenClassWithGenMethodsConstrained.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenClasses\GenClassWithGenReturn.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenClasses\MethodWithArgumentBeingArrayOfGenericTypeOfT.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenClasses\OnlyGenMethodsClass.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenericClassProxyTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenericInterfaceProxyTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenericMethodsProxyTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenInterfaces\GenericMethodWhereOneGenParamInheritsTheOther.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenInterfaces\GenExplicitImplementation.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenInterfaces\GenInterface.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenInterfaces\GenInterfaceHierarchy.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenInterfaces\GenInterfaceWithGenArray.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenInterfaces\GenInterfaceWithGenericTypes.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenInterfaces\GenInterfaceWithGenMethods.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenInterfaces\GenInterfaceWithGenMethodsAndGenReturn.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenInterfaces\GenInterfaceWithMethodWithNestedGenericParameter.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenInterfaces\GenInterfaceWithMethodWithNestedGenericParameterByRef.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenInterfaces\GenInterfaceWithMethodWithNestedGenericReturn.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="GenInterfaces\OnlyGenMethodsInterface.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interceptors\AddTwoInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interceptors\AssertCanChangeTargetInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interceptors\AssertCannotChangeTargetInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interceptors\CallCountingInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interceptors\ChangeTargetInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interceptors\DoNothingInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interceptors\KeepDataInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interceptors\LogInvocationInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interceptors\ProceedNTimesInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interceptors\ProceedOnTypeInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interceptors\RequiredParamInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interceptors\SetReturnValueInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interceptors\ThrowingInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interceptors\WithCallbackInterceptor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterfaceProxyBaseTypeTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InterfaceProxyWithTargetInterfaceTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interfaces\IDecimalOutParam.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interfaces\IdenticalInterfaces.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interfaces\IEmpty.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interfaces\IFooWithIntPtr.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interfaces\IFooWithOutIntPtr.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interfaces\IGenericWithRefOut.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interfaces\IHaveIndexers.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interfaces\INullable.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interfaces\IOne.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interfaces\ISimple.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interfaces\ITwo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Interfaces\IWithRefOut.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="InvocationMethodInvocationTargetTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="NonProxiedMethodsNoTargetTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="NonProxiedMixinMethodsTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="NonProxiedTargetMethodsTestCase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="DynamicProxy.Tests\Classes\VirtuallyImplementsInterfaceWithProperty.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Castle.Core\Castle.Core.csproj">
      <Project>{E4FA5B53-7D36-429E-8E5C-53D5479242BA}</Project>
      <Name>Castle.Core</Name>
    </ProjectReference>
  </ItemGroup>
  <Choose>
    <When Condition="$(MSBuildTargets)!='Silverlight 3.0' and $(MSBuildTargets)!='Silverlight 4.0'">
      <ItemGroup>
        <Reference Include="log4net, Version=1.2.10.0, Culture=neutral, PublicKeyToken=1b44e1d426115821, processorArchitecture=MSIL">
          <SpecificVersion>False</SpecificVersion>
          <HintPath>..\..\lib\net35\log4net.dll</HintPath>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <ItemGroup>
    <None Include="..\..\buildscripts\CastleKey.snk">
      <Link>CastleKey.snk</Link>
    </None>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" Condition="($(MSBuildTargets) == '') Or ($(MSBuildTargets) == 'CSharp')" />
  <Import Project="$(MSBuildExtensionsPath)\Microsoft\Silverlight\v3.0\Microsoft.Silverlight.CSharp.targets" Condition="$(MSBuildTargets) == 'Silverlight 3.0'" />
  <Import Project="$(MSBuildExtensionsPath)\Microsoft\Silverlight\v4.0\Microsoft.Silverlight.CSharp.targets" Condition="$(MSBuildTargets) == 'Silverlight 4.0'" />
  <Import Project="$(RootPath)\Settings.proj" />
  <Import Project="$(BuildScriptsPath)\Castle.Common.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>